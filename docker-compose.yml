services:
  api-gateway:
    container_name: api-gateway
    image: api-gateway:latest
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      - resource-server
    networks:
      - microservices-network

  resource-server:
    container_name: resource-server
    image: resource-server:latest
    build:
      context: ./resource-server
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    networks:
      - microservices-network

  postgres:
    image: postgres:15.6
    container_name: postgres_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    networks:
      - microservices-network

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak-auth
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password

      KC_HOSTNAME: keycloak-auth
      KC_HOSTNAME_PORT: 7080
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false

      KC_LOG_LEVEL: info
      KC_METRICS_ENABLED: true
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command: ["start-dev", "--http-port", "7080"]
    depends_on:
      - postgres
    ports:
      - "7080:7080"
    networks:
      - microservices-network

networks:
  microservices-network:
    driver: bridge

volumes:
  postgres_data: